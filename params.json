{"name":"Minion","tagline":"Minion is a small elixir framework to help you implementing chaotic distributed appliances","body":"# Installation\r\n\r\nFirst, git clone the repo:\r\n```\r\ngit clone https://github.com/ChaosSteffen/Minion.git\r\ncd Minion\r\n```\r\n\r\nAfter that, get dependencies and compile:  \r\n```\r\nmix deps.get\r\nmix compile\r\n```\r\n\r\nThen, start with  \r\n```\r\nelixir --name minion --cookie minion --no-halt -pa ebin --app minion\r\n```\r\n\r\nOr, Start interactive with  \r\n```\r\niex --name minion --cookie minion -S mix\r\n```\r\n\r\n# Documentation\r\n\r\nLook, there is [beautifully generated documentation](http://chaossteffen.github.io/Minion/docs/) for you! It describes all the features on the master branch.\r\n\r\nTo generate the documetation on your own, just run:  \r\n```\r\nmix deps.get\r\nmix docs\r\n```\r\n\r\nThen, have a look into your projects `/docs` folder.\r\n\r\n# What to do with Minion\r\n\r\nExecute shell commands on all Nodes:  \r\n```\r\nCmd.all \"ls\"\r\n```\r\n\r\n# Contributors\r\n\r\n* Christoph Grabo ([@asaaki](https://github.com/asaaki))\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}