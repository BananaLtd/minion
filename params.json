{"name":"Minion","tagline":"Minion is a small elixir framework to help you implementing chaotic distributed appliances","body":"# How to create a Minion-based project\r\n\r\nDownload the minion Mix task and install it to your local mix tasks:\r\n```\r\nmix local.install http://bananaltd.github.io/minion/archive/minion-0.0.1.ez\r\n```\r\n\r\nCreate a elixir project with minion dependecies:\r\n```\r\nmix minion your_project_name\r\n```\r\n\r\nThen, enter your project directory:\r\n```\r\ncd your_project_name\r\n```\r\n\r\nNow, you can start your minion project in an interactive shell:\r\n```\r\niex --name minion --cookie minion -S mix\r\n```\r\n\r\nOr, you can start it as a silent background task:\r\n```\r\nmix compile\r\nelixir --name minion --cookie minion --no-halt -pa ebin --app minion\r\n```\r\n\r\n# What can Minion do for me\r\nIf you have multiple instances of your minion-based project you can distribute tasks to all of your nodes. It works just like magic!\r\n\r\n*We will show you some demo code soon. Meanwhile have a look at [Gru](http://bananaltd.github.io/gru/), it uses Minion.*\r\n\r\n\r\n# Documentation\r\n\r\nLook, there is [beautifully generated documentation](http://bananaltd.github.io/minion/docs/) for you! It describes all the features on the master branch.\r\n\r\nTo generate the documetation on your own, just run:\r\n```\r\nmix deps.get\r\nmix docs\r\n```\r\n\r\nThen, have a look into your projects `/docs` folder.\r\n\r\n\r\n# Contributors\r\n\r\n* Steffen Schr√∂der ([@ChaosSteffen](https://github.com/ChaosSteffen))\r\n* Christoph Grabo ([@asaaki](https://github.com/asaaki))\r\n* Sascha Depold ([@sdepold](https://github.com/sdepold))\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}